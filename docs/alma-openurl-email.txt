Hi Peta, 

Based on the scenario you've described, I'm assuming that: 1) the research group is interested in articles that are not necessarily indexed in Primo Central, and 2) they have sufficient article metadata to construct OpenURLs. If that's the case, you might want to consider sending OpenURLs to the Alma resolver with "svc_dat=CTO" and "debug=true" parameters.

For example:

https://ap01.alma.exlibrisgroup.com/view/uresolver/61BOND_INST/openurl?svc_dat=CTO&debug=true&ctx_enc=info:ofi/enc:UTF-8&ctx_id=10_1&ctx_tim=2015-06-11T08%3A29%3A09IST&ctx_ver=Z39.88-2004&url_ctx_fmt=info:ofi/fmt:kev:mtx:ctx&url_ver=Z39.88-2004&rft.genre=article&rft.atitle=NISO%27s+IOTA+Initiative%3A+Measuring+the+Quality+of+OpenURL+Links&rft.jtitle=The+Serials+Librarian&rft.btitle=&rft.aulast=Kasprowski&rft.auinit=&rft.auinit1=&rft.auinitm=&rft.ausuffix=&rft.au=Kasprowski%2C+Rafal&rft.aucorp=&rft.date=20120101&rft.volume=62&rft.issue=1-4&rft.part=&rft.quarter=&rft.ssn=&rft.spage=95&rft.epage=102&rft.pages=&rft.artnum=&rft.issn=0361-526X&rft.eissn=1541-1095&rft.isbn=&rft.sici=&rft.coden=&rft_id=info:doi/10.1080%2F0361526X.2012.652480&rft.object_id=&rft.eisbn=&rft.edition=&rft.pub=Taylor+%26+Francis+Group&rft.place=&rft.series=&rft.stitle=&rft.bici=&rft_id=info:bibcode/&rft_id=info:hdl/&rft_id=info:lccn/&rft_id=info:oclcnum/&rft_id=info:pmid/&rft_id=info:eric/((addata/eric}}&rft_dat=%3Ctayfranc%3E10.1080%2F0361526X.2012.652480%3C/tayfranc%3E

When you include those parameters in the OpenURL, Alma will return the context object (XML-serialized) along with some useful delivery data that can be used to determine if full text is available (similar to using the 'sfx.response_type=simplexml' parameter in SFX). For instance, one could use the following XPath expression to find all available full-text target URLs for a given resource (presumably you would want to excluded full-text services that are "filtered" for whatever reason): 

//xmlns:context_service[@service_type="getFullTxt" and not(xmlns:keys/xmlns:key[@id="Filtered" and text()="true"])]/xmlns:target_url/text()

*Caveat*: As far as I know, this is not documented anywhere, but it's the only way I know of to query Alma with article-level metadata. 

-- 

Jeff Peterson
University of Minnesota Libraries 
